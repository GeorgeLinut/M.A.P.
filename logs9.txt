ExecStack
CompStmt{first=domain.statements.NewStmt@452b3a41, second=CompStmt{first=domain.statements.NewStmt@4a574795, second=CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=domain.expressions.ReadHeapExpression@f6f4d33} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=domain.expressions.ReadHeapExpression@23fc625e} )}}}
AssignStmt{expr=ConstantExpression{value=10}, var='v'}
SymbolTable
Output
Heap
ExecStack
CompStmt{first=domain.statements.NewStmt@452b3a41, second=CompStmt{first=domain.statements.NewStmt@4a574795, second=CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=domain.expressions.ReadHeapExpression@f6f4d33} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=domain.expressions.ReadHeapExpression@23fc625e} )}}}
SymbolTable
v-->10
Output
Heap
ExecStack
CompStmt{first=domain.statements.NewStmt@4a574795, second=CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=domain.expressions.ReadHeapExpression@f6f4d33} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=domain.expressions.ReadHeapExpression@23fc625e} )}}
domain.statements.NewStmt@452b3a41
SymbolTable
v-->10
Output
Heap
ExecStack
CompStmt{first=domain.statements.NewStmt@4a574795, second=CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=domain.expressions.ReadHeapExpression@f6f4d33} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=domain.expressions.ReadHeapExpression@23fc625e} )}}
SymbolTable
v-->6
Output
Heap
6-->20
ExecStack
CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=domain.expressions.ReadHeapExpression@f6f4d33} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=domain.expressions.ReadHeapExpression@23fc625e} )}
domain.statements.NewStmt@4a574795
SymbolTable
v-->6
Output
Heap
6-->20
ExecStack
CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=domain.expressions.ReadHeapExpression@f6f4d33} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=domain.expressions.ReadHeapExpression@23fc625e} )}
SymbolTable
v-->7
Output
Heap
6-->20
7-->22
ExecStack
print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=domain.expressions.ReadHeapExpression@23fc625e} )
print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=domain.expressions.ReadHeapExpression@f6f4d33} )
SymbolTable
v-->7
Output
Heap
7-->22
ExecStack
print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=domain.expressions.ReadHeapExpression@23fc625e} )
SymbolTable
v-->7
Output
122
Heap
7-->22
ExecStack
SymbolTable
v-->7
Output
122
122
Heap
7-->22
ExecStack
CompStmt{first=NewStmt{variable='v', address=6, expression=ConstantExpression{value=20}}, second=CompStmt{first=NewStmt{variable='v', address=7, expression=ConstantExpression{value=22}}, second=CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )}}}
AssignStmt{expr=ConstantExpression{value=10}, var='v'}
SymbolTable
Output
Heap
ExecStack
CompStmt{first=NewStmt{variable='v', address=6, expression=ConstantExpression{value=20}}, second=CompStmt{first=NewStmt{variable='v', address=7, expression=ConstantExpression{value=22}}, second=CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )}}}
SymbolTable
v-->10
Output
Heap
ExecStack
CompStmt{first=NewStmt{variable='v', address=7, expression=ConstantExpression{value=22}}, second=CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )}}
NewStmt{variable='v', address=6, expression=ConstantExpression{value=20}}
SymbolTable
v-->10
Output
Heap
ExecStack
CompStmt{first=NewStmt{variable='v', address=7, expression=ConstantExpression{value=22}}, second=CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )}}
SymbolTable
v-->6
Output
Heap
6-->20
ExecStack
CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )}
NewStmt{variable='v', address=7, expression=ConstantExpression{value=22}}
SymbolTable
v-->6
Output
Heap
6-->20
ExecStack
CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )}
SymbolTable
v-->7
Output
Heap
6-->20
7-->22
ExecStack
print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )
print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )
SymbolTable
v-->7
Output
Heap
7-->22
ExecStack
print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )
SymbolTable
v-->7
Output
122
Heap
7-->22
ExecStack
SymbolTable
v-->7
Output
122
122
Heap
7-->22
ExecStack
CompStmt{first=NewStmt{variable='v', address=6, expression=ConstantExpression{value=20}}, second=CompStmt{first=NewStmt{variable='v', address=7, expression=ConstantExpression{value=22}}, second=CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )}}}
AssignStmt{expr=ConstantExpression{value=10}, var='v'}
SymbolTable
Output
Heap
ExecStack
CompStmt{first=NewStmt{variable='v', address=6, expression=ConstantExpression{value=20}}, second=CompStmt{first=NewStmt{variable='v', address=7, expression=ConstantExpression{value=22}}, second=CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )}}}
SymbolTable
v-->10
Output
Heap
ExecStack
CompStmt{first=NewStmt{variable='v', address=7, expression=ConstantExpression{value=22}}, second=CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )}}
NewStmt{variable='v', address=6, expression=ConstantExpression{value=20}}
SymbolTable
v-->10
Output
Heap
ExecStack
CompStmt{first=NewStmt{variable='v', address=7, expression=ConstantExpression{value=22}}, second=CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )}}
SymbolTable
v-->6
Output
Heap
6-->20
ExecStack
CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )}
NewStmt{variable='v', address=7, expression=ConstantExpression{value=22}}
SymbolTable
v-->6
Output
Heap
6-->20
ExecStack
CompStmt{first=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} ), second=print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )}
SymbolTable
v-->7
Output
Heap
6-->20
7-->22
ExecStack
print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )
print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )
SymbolTable
v-->7
Output
Heap
7-->22
ExecStack
print( ArithmeticExpression{operand1=ConstantExpression{value=100}, operator=+, operand2=ReadHeapExpression{variable='v'}} )
SymbolTable
v-->7
Output
122
Heap
7-->22
ExecStack
SymbolTable
v-->7
Output
122
122
Heap
7-->22
